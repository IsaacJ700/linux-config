[credential]
    helper = store
[alias]
    # operations
    co = checkout
    rename = branch -m
    cm = commit -m
    ca = commit -a
    cam = commit -am
    amend = commit --amend
    f = fetch
    fp = fetch --prune
    p = pull
    pl = pull
    pu = push
    cp = cherry-pick
    rb = rebase
    rbo = !git rebase origin/$(git rev-parse --abbrev-ref HEAD)
    s = show
    st = status
    br = branch

    # diff and log
    d = diff
    ds = diff --cached
    dc = diff --cached
    do = !git diff origin/$(git rev-parse --abbrev-ref HEAD)
    sns = show --compact-summary  # --name-status for old versions of git
    dns = diff --compact-summary  # --name-status for old versions of git
    lns = log --compact-summary  # --name-status for old versions of git
    l = log
    rl = log -n4
    hist = log-compact --graph --decorate
    h = log-compact --graph --decorate
    re = log-compact --graph --decorate -8
    tree = log-compact --all --graph --decorate
    t = log-compact --all --graph --decorate
    rt = log-compact --all --graph --decorate -8
    tree-simple = log-compact --all --graph --decorate --simplify-by-decoration
    ts = log-compact --all --graph --decorate --simplify-by-decoration

    # handy
    top = rev-parse --show-toplevel
    orphan = checkout --orphan orphan
    ieee = config user.email k.kredit.us@ieee.org
    dw = config user.email kevin.kredit@dornerworks.com
    patchify = format-patch -1
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    assumed = !git ls-files -v | grep ^h | cut -c 3-
    istracked = ls-files --error-unmatch
    read = !git show $1..HEAD --reverse
    recover = "!git fsck --unreachable | grep commit | cut -d' ' -f3 | \
                xargs git log --merges --no-walk --grep=WIP"
    clonemy = !git clone https://github.com/kkredit/$1
    newpush = !git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
[core]
    editor = vim
    pager = diff-so-fancy | perl -pe 's/\t/Â»\\e[1D\t/g' | less --tabs=4 -RFX
    excludesfile = ~/.gitignore_global
[rebase]
    autoSquash = true
[log-compact]
    defaults = --two-initials --abbrev=8
[user]
    name = Kevin Kredit
[github]
    user = kkredit
[push]
    default = simple
[color]
    ui = true
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[color "diff"]
    meta = yellow
    frag = magenta bold
    commit = yellow bold
    old = red bold
    new = green bold
    whitespace = red reverse
[alias]
    # functions
    url = "!f() { \
                BR=\"origin\"; \
                if [ $# -gt 0 ]; then \
                    BR=\"$1\"; \
                fi; \
                echo $BR; \
                git remote show -n $BR | grep URL; \
            }; f"

    submodule-rm = "!f() { \
                        SM=\"$(echo $1 | sed s,/*$,,)\"; \
                        git rm --cached $SM; \
                        yes | rm -r $SM; \
                        yes | rm -r .git/modules/$SM; \
                        git config -f .gitmodules --remove-section submodule.$SM; \
                        git config -f .git/config --remove-section submodule.$SM; \
                        git add .gitmodules; \
                    }; f"

    brun = "!f() { \
                READ_BR=$1; \
                CMD=$2; \
                COMPARE_BR=HEAD; \
                if [ $# -gt 2 ]; then \
                    COMPARE_BR=$3; \
                fi; \
                LAST_COMMON=$(git merge-base $READ_BR $COMPARE_BR); \
                case \"$CMD\" in \
                    \"lns\") git lns $LAST_COMMON..$READ_BR;; \
                    \"sns\") git sns $LAST_COMMON..$READ_BR;; \
                    \"read\") git show $LAST_COMMON..$READ_BR --reverse;; \
                    *) echo Invalid command option: $CMD;; \
                esac; \
            }; f"
